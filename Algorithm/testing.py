import optparse
import sys

from .

def parse_args(description):
    parser = optparse.OptionParser(description=description)
    parser.add_option("-p", "--pref_filename", type="string", \
                      help="input file with student preferences")
    parser.add_option("-c", "--constraint_filename", type="string", \
                      help="input file with scheduling constraints")

    mandatories = ["pref_filename", "constraint_filename"]
    (opts, args) = parser.parse_args()
    for m in mandatories:
        if not opts.__dict__[m]:
            parser.print_help()
            sys.exit()
    return opts

def test_load_variables():
    input_str = "(4, 14, 4, 7, {1: 12, 2: 445, 3: 135, 4: 111}, " \
                "{1: 6, 2: 1, 3: 2, 4: 6, 5: 4, 6: 3, 7: 4, 8: 3, 9: 2, 10: 1, 11: 5, 12: 5, 13: 7, 14: 7}, " \
                "{1: {\'class\': [2, 10]}, 2: {\'class\': [3, 9]}, 3: {\'class\': [6, 8]}, " \
                "4: {\'class\': [5, 7]}, 5: {\'class\': [11, 12]}, 6: {\'class\': [1, 4]}, 7: {\'class\': [13, 14]}}) " \
                "(50, {1: [\'12\', \'5\', \'11\', \'7\'], 2: [\'1\', \'9\', \'12\', \'10\'], 3: [\'7\', \'1\', \'4\', \'3\'], " \
                "4: [\'12\', \'7\', \'8\', \'5\'], 5: [\'13\', \'7\', \'1\', \'2\'], 6: [\'11\', \'7\', \'14\', \'9\'], " \
                "7: [\'10\', \'4\', \'12\', \'14\'], 8: [\'1\', \'14\', \'10\', \'6\'], 9: [\'4\', \'13\', \'14\', \'5\'], " \
                "10: [\'5\', \'8\', \'2\', \'10\'], 11: [\'7\', \'10\', \'13\', \'9\'], 12: [\'2\', \'1\', \'14\', \'13\'], " \
                "13: [\'10\', \'13\', \'6\', \'3\'], 14: [\'1\', \'12\', \'14\', \'6\'], 15: [\'5\', \'10\', \'8\', \'3\'], " \
                "16: [\'6\', \'4\', \'10\', \'9\'], 17: [\'11\', \'10\', \'3\', \'6\'], 18: [\'7\', \'11\', \'5\', \'3\'], " \
                "19: [\'10\', \'13\', \'12\', \'8\'], 20: [\'6\', \'1\', \'7\', \'9\'], 21: [\'5\', \'1\', \'6\', \'13\'], " \
                "22: [\'5\', \'2\', \'6\', \'8\'], 23: [\'7\', \'3\', \'6\', \'8\'], 24: [\'12\', \'6\', \'14\', \'4\'], " \
                "25: [\'4\', \'2\', \'3\', \'8\'], 26: [\'5\', \'14\', \'3\', \'7\'], 27: [\'2\', \'10\', \'4\', \'6\'], " \
                "28: [\'10\', \'9\', \'4\', \'12\'], 29: [\'8\', \'3\', \'2\', \'13\'], 30: [\'13\', \'5\', \'10\', \'12\'], " \
                "31: [\'9\', \'11\', \'10\', \'14\'], 32: [\'4\', \'6\', \'1\', \'7\'], 33: [\'14\', \'8\', \'12\', \'13\'], " \
                "34: [\'4\', \'11\', \'12\', \'8\'], 35: [\'10\', \'4\', \'6\', \'7\'], 36: [\'9\', \'2\', \'5\', \'13\'], " \
                "37: [\'12\', \'8\', \'10\', \'1\'], 38: [\'8\', \'13\', \'14\', \'4\'], 39: [\'5\', \'14\', \'12\', \'13\'], " \
                "40: [\'12\', \'10\', \'5\', \'13\'], 41: [\'7\', \'10\', \'2\', \'6\'], 42: [\'5\', \'13\', \'2\', \'3\'], " \
                "43: [\'10\', \'2\', \'5\', \'3\'], 44: [\'11\', \'5\', \'6\', \'2\'], 45: [\'2\', \'9\', \'3\', \'12\'], " \
                "46: [\'6\', \'5\', \'2\', \'4\'], 47: [\'12\', \'8\', \'9\', \'1\'], 48: [\'10\', \'6\', \'12\', \'11\'], " \
                "49: [\'5\', \'13\', \'9\', \'8\'], 50: [\'9\', \'11\', \'14\', \'1\']})"

if __name__ == "__main__":
    args = parse_args('Set up student dictionary')
    print(read_constraints(args.constraint_filename))
    print(read_preferences(args.pref_filename))